
Part 1 Explanation:
    1. We used "dig ecf.utoronto.ca" to query the ipv4 address of ecf.utoronto.ca.
    2. We used "dig ecf.utoronto.ca NS" to query the name servers of ecf.utoronto.ca, there are two ns#.utoronto.ca name servers returned, 
       which are the name servers of ecf.utoronto.ca.
    3. We used "dig ecf.utoronto.ca MX" to get the name of the mail server - ecf-utoronto-ca.mail.protection.outlook.com, then we used 
       "dig ecf-utoronto-ca.mail.protection.outlook.com" to get the IP addresses of the two mail servers.
    4. We added options "@127.0.0.1 -p <BIND listen-on port>" to the commands in 1-3, to direct to the BIND server, 
       specifictly:
        4.1. dig @127.0.0.1 -p 2222 ecf.utoronto.ca
        4.2. dig @127.0.0.1 -p 2222 ecf.utoronto.ca NS
        4.3. dig @127.0.0.1 -p 2222 ecf.utoronto.ca MX
        4.3. dig @127.0.0.1 -p 2222 ecf-utoronto-ca.mail.protection.outlook.com

Part 2 Explanation:
We first created a socket linstening on connections from the dig command with the port used in the command. We also created another socket 
for communicating with the BIND server. Whenever we received a query from the dig socket, we forward the message to the BIND server using 
the BIND socket. After the BIND server responses an answer, we forward it back to the dig command using the dig socket.

Part 3 Explanation:
After receiving the responses, we would modify the contents of name servers to be "ns1.spoof568attacker.net" and "ns2.spoof568attacker.net",
, address to be 1.11.111.9 and then sent it to the client (the dig command). 

Part 4 Explanation:
We used an infinite loop, inside which we first sent a query message to the BIND server with a random domain name. Right after the message 
was sent, we spoofed an answer message with name servers to be "ns1.spoof568attacker.net" and "ns2.spoof568attacker.net", and id to be the 
random 8-bit number. We resent the spoofed message multiple times back to the BIND server, each with a different id, trying to match the one 
in the actual returned message from the DNS server. We checked if the faked name servers' name are in the returned answer from the BIND server 
to see if the attack is successful. If not, we loop again and try another random domain name.
